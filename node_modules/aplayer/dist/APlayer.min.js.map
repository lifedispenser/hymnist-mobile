{"version":3,"sources":["APlayer.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","instances","APlayer","option","_this","this","isMobile","navigator","userAgent","match","autoplay","defaultOption","element","document","getElementsByClassName","narrow","mutex","showlrc","theme","loop","defaultKey","hasOwnProperty","playIndex","toString","call","music","audios","secondToTime","second","add0","num","min","parseInt","sec","parseLrc","arr","lrcs","k","lyric","split","lrc","lyricLen","lrcTimes","lrcText","replace","timeLen","j","oneTime","exec","lrcTime","push","sort","a","b","updateBar","type","percentage","direction","style","updateLrc","currentTime","arguments","undefined","audio","lrcIndex","lrcContents","transform","webkitTransform","classList","remove","getElementsByTagName","add","eventTypes","event","trigger","_i","value","getElementViewLeft","actualLeft","offsetLeft","current","offsetParent","elementScrollLeft","body","scrollLeft","documentElement","getElementViewTop","actualTop","offsetTop","elementScrollTop","scrollTop","_this2","multiple","innerHTML","eleHTML","pic","encodeURI","title","author","ptime","offsetWidth","marginRight","button","addEventListener","e","contains","play","pause","listItem","_loop","_i2","musicIndex","setMusic","playedBar","loadedBar","thumb","bar","barWidth","window","clientWidth","clientX","duration","parseFloat","width","background","thumbMove","thumbUp","removeEventListener","playedTime","setInterval","clearInterval","volumeBar","volumeBarWrap","volumeicon","barHeight","clientY","volume","muted","className","loopEle","list","index","_this3","indexMusic","backgroundImage","createElement","src","url","preload","buffered","end","ended","height","lrcHTML","_this4","paused","setTimeout","_this5","name","func","module","exports"],"mappings":"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","file":"APlayer.min.js","sourcesContent":["((instances) => {\n\n    class APlayer {\n        /**\n         * APlayer constructor function\n         *\n         * @param {Object} option - See README\n         * @constructor\n         */\n        constructor(option) {\n\n            this.isMobile = navigator.userAgent.match(/(iPad)|(iPhone)|(iPod)|(android)|(webOS)/i);\n            // compatibility: some mobile browsers don't suppose autoplay\n            if (this.isMobile) {\n                option.autoplay = false;\n            }\n\n            // default options\n            const defaultOption = {\n                element: document.getElementsByClassName('aplayer')[0],\n                narrow: false,\n                autoplay: false,\n                mutex: true,\n                showlrc: 0,\n                theme: '#b7daff',\n                loop: true\n            };\n            for (let defaultKey in defaultOption) {\n                if (defaultOption.hasOwnProperty(defaultKey) && !option.hasOwnProperty(defaultKey)) {\n                    option[defaultKey] = defaultOption[defaultKey];\n                }\n            }\n\n            // multiple music\n            this.playIndex = Object.prototype.toString.call(option.music) === '[object Array]' ? 0 : -1;\n\n            this.option = option;\n            this.audios = [];\n            this.loop = option.loop;\n\n            /**\n             * Parse second to 00:00 format\n             *\n             * @param {Number} second\n             * @return {String} 00:00 format\n             */\n            this.secondToTime = (second) => {\n                const add0 = (num) => {\n                    return num < 10 ? '0' + num : '' + num;\n                };\n                const min = parseInt(second / 60);\n                const sec = parseInt(second - min * 60);\n                return add0(min) + ':' + add0(sec);\n            };\n\n            /**\n             * Parse lrc, suppose multiple time tag\n             *\n             * @param {Array} arr - Format:\n             * [mm:ss.xx]lyric\n             * [mm:ss.xxx]lyric\n             * [mm:ss.xx][mm:ss.xx][mm:ss.xx]lyric\n             *\n             * @return {Array} [[[time, text], [time, text], [time, text], ...], [[time, text], [time, text], [time, text], ...], ...]\n             */\n            this.parseLrc = (arr) => {\n                let lrcs = [];\n                for (let k = 0; k < arr.length; k++) {\n                    const lyric = arr[k].split('\\n');\n                    let lrc = [];\n                    const lyricLen = lyric.length;\n                    for (let i = 0; i < lyricLen; i++) {\n                        // match lrc time\n                        const lrcTimes = lyric[i].match(/\\[(\\d{2}):(\\d{2})\\.(\\d{2,3})]/g);\n                        // match lrc text\n                        const lrcText = lyric[i].replace(/\\[(\\d{2}):(\\d{2})\\.(\\d{2,3})]/g, '').replace(/^\\s+|\\s+$/g, '');\n\n                        if (lrcTimes != null) {\n                            // handle multiple time tag\n                            const timeLen = lrcTimes.length;\n                            for (let j = 0; j < timeLen; j++) {\n                                const oneTime = /\\[(\\d{2}):(\\d{2})\\.(\\d{2,3})]/.exec(lrcTimes[j]);\n                                const lrcTime = (oneTime[1]) * 60 + parseInt(oneTime[2]) + parseInt(oneTime[3]) / ((oneTime[3] + '').length === 2 ? 100 : 1000);\n                                lrc.push([lrcTime, lrcText]);\n                            }\n                        }\n                    }\n                    // sort by time\n                    lrc.sort((a, b) => a[0] - b[0]);\n                    lrcs.push(lrc);\n                }\n                return lrcs;\n            };\n\n            /**\n             * Update progress bar, including loading progress bar and play progress bar\n             *\n             * @param {String} type - Point out which bar it is, should be played loaded or volume\n             * @param {Number} percentage\n             * @param {String} direction - Point out the direction of this bar, Should be height or width\n             */\n            this.updateBar = (type, percentage, direction) => {\n                percentage = percentage > 0 ? percentage : 0;\n                percentage = percentage < 1 ? percentage : 1;\n                this[type + 'Bar'].style[direction] = percentage * 100 + '%';\n            };\n\n            /**\n             * Update lrc\n             *\n             * @param {Number} currentTime\n             */\n            this.updateLrc = (currentTime = this.audio.currentTime) => {\n                if (this.lrcIndex > this.lrc.length - 1 || currentTime < this.lrc[this.lrcIndex][0] || (!this.lrc[this.lrcIndex + 1] || currentTime >= this.lrc[this.lrcIndex + 1][0])) {\n                    for (let i = 0; i < this.lrc.length; i++) {\n                        if (currentTime >= this.lrc[i][0] && (!this.lrc[i + 1] || currentTime < this.lrc[i + 1][0])) {\n                            this.lrcIndex = i;\n                            this.lrcContents.style.transform = `translateY(${-this.lrcIndex * 20}px)`;\n                            this.lrcContents.style.webkitTransform = `translateY(${-this.lrcIndex * 20}px)`;\n                            this.lrcContents.getElementsByClassName('aplayer-lrc-current')[0].classList.remove('aplayer-lrc-current');\n                            this.lrcContents.getElementsByTagName('p')[i].classList.add('aplayer-lrc-current');\n                        }\n                    }\n                }\n            };\n\n            // define APlayer events\n            this.eventTypes = ['play', 'pause', 'canplay', 'playing', 'ended', 'error'];\n            this.event = {};\n            for (let i = 0; i < this.eventTypes.length; i++) {\n                this.event[this.eventTypes[i]] = [];\n            }\n            this.trigger = (type) => {\n                for (let i = 0; i < this.event[type].length; i++) {\n                    this.event[type][i]();\n                }\n            }\n        }\n\n        /**\n         * AutoLink initialization function\n         */\n        init() {\n            this.element = this.option.element;\n            this.multiple = this.playIndex > -1;\n            this.music = this.multiple ? this.option.music[this.playIndex] : this.option.music;\n\n            let i;\n            // parser lrc\n            if (this.option.showlrc) {\n                let lrcs = [];\n                if (this.option.showlrc === 1) {\n                    if (this.multiple) {\n                        for (i = 0; i < this.option.music.length; i++) {\n                            lrcs.push(this.option.music[i].lrc);\n                        }\n                    }\n                    else {\n                        lrcs.push(this.option.music.lrc);\n                    }\n                }\n                else if (this.option.showlrc === 2 || this.option.showlrc === true)  {\n                    for (i = 0; i < this.element.getElementsByClassName('aplayer-lrc-content').length; i++) {\n                        lrcs.push(this.element.getElementsByClassName('aplayer-lrc-content')[i].innerHTML);\n                    }\n                }\n\n                this.lrcs = this.parseLrc(lrcs);\n            }\n\n            // add class aplayer-withlrc\n            if (this.option.showlrc) {\n                this.element.classList.add('aplayer-withlrc');\n            }\n\n            // fill in HTML\n            let eleHTML = `\n                <div class=\"aplayer-pic\" ${(this.music.pic ? (`style=\"background-image: url(${encodeURI(this.music.pic)});\"`) : ``)}>\n                    <div class=\"aplayer-button aplayer-play\">\n                        <i class=\"demo-icon aplayer-icon-play\"></i>\n                    </div>\n                </div>\n                <div class=\"aplayer-info\">\n                    <div class=\"aplayer-music\">\n                        <span class=\"aplayer-title\"></span>\n                        <span class=\"aplayer-author\"></span>\n                    </div>\n                    <div class=\"aplayer-lrc\">\n                        <div class=\"aplayer-lrc-contents\" style=\"transform: translateY(0); -webkit-transform: translateY(0);\"></div>\n                    </div>\n                    <div class=\"aplayer-controller\">\n                        <div class=\"aplayer-bar-wrap\">\n                            <div class=\"aplayer-bar\">\n                                <div class=\"aplayer-loaded\" style=\"width: 0\"></div>\n                                <div class=\"aplayer-played\" style=\"width: 0; background: ${this.option.theme};\">\n                                    <span class=\"aplayer-thumb\" style=\"border: 1px solid ${this.option.theme};\"></span>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"aplayer-time\">\n                             - <span class=\"aplayer-ptime\">00:00</span> / <span class=\"aplayer-dtime\">00:00</span>\n                            <div class=\"aplayer-volume-wrap\">\n                                <i class=\"demo-icon aplayer-icon-volume-down\"></i>\n                                <div class=\"aplayer-volume-bar-wrap\">\n                                    <div class=\"aplayer-volume-bar\">\n                                        <div class=\"aplayer-volume\" style=\"height: 80%; background: ${this.option.theme};\"></div>\n                                    </div>\n                                </div>\n                            </div>\n                            <i class=\"demo-icon aplayer-icon-loop${(this.loop ? `` : ` aplayer-noloop`)}\"></i>${(this.multiple ? `<i class=\"demo-icon aplayer-icon-menu\"></i>` : ``)}\n                        </div>\n                    </div>\n                </div>`;\n            if (this.multiple) {\n                eleHTML += `\n                <div class=\"aplayer-list\">\n                    <ol>`;\n                for (i = 0; i < this.option.music.length; i++) {\n                    eleHTML += `\n                        <li>\n                            <span class=\"aplayer-list-cur\" style=\"background: ${this.option.theme};\"></span>\n                            <span class=\"aplayer-list-index\">${(i + 1)}</span>\n                            <span class=\"aplayer-list-title\">${this.option.music[i].title}</span>\n                            <span class=\"aplayer-list-author\">${this.option.music[i].author}</span>\n                        </li>`\n                }\n                eleHTML += `\n                    </ol>\n                </div>`\n            }\n            this.element.innerHTML = eleHTML;\n\n            this.ptime = this.element.getElementsByClassName('aplayer-ptime')[0];\n\n            if (this.element.getElementsByClassName('aplayer-info')[0].offsetWidth < 200) {\n                this.element.getElementsByClassName('aplayer-time')[0].classList.add('aplayer-time-narrow');\n            }\n            // fix the width of aplayer bar\n            this.element.getElementsByClassName('aplayer-bar-wrap')[0].style.marginRight = this.element.getElementsByClassName('aplayer-time')[0].offsetWidth + 5 + 'px';\n\n            // switch to narrow style\n            if (this.option.narrow) {\n                this.element.classList.add('aplayer-narrow');\n            }\n\n            // play and pause button\n            this.button = this.element.getElementsByClassName('aplayer-button')[0];\n            this.button.addEventListener('click', (e) => {\n                if (this.button.classList.contains('aplayer-play')) {\n                    this.play();\n                }\n                else if (this.button.classList.contains('aplayer-pause')) {\n                    this.pause();\n                }\n            });\n\n            // click music list: change music\n            if (this.multiple) {\n                const listItem = this.element.getElementsByClassName('aplayer-list')[0].getElementsByTagName('li');\n                for (let i = 0; i < this.option.music.length; i++) {\n                    listItem[i].addEventListener('click', () => {\n                        const musicIndex = parseInt(listItem[i].getElementsByClassName('aplayer-list-index')[0].innerHTML) - 1;\n                        if (musicIndex !== this.playIndex) {\n                            this.setMusic(musicIndex);\n                        }\n                        if (this.isMobile) {\n                            this.pause();\n                        }\n                        else {\n                            this.play();\n                        }\n                    });\n                }\n            }\n\n            // control play progress\n            this.playedBar = this.element.getElementsByClassName('aplayer-played')[0];\n            this.loadedBar = this.element.getElementsByClassName('aplayer-loaded')[0];\n            this.thumb = this.element.getElementsByClassName('aplayer-thumb')[0];\n            this.bar = this.element.getElementsByClassName('aplayer-bar')[0];\n            let barWidth;\n            this.bar.addEventListener('click', (event) => {\n                const e = event || window.event;\n                barWidth = this.bar.clientWidth;\n                const percentage = (e.clientX - getElementViewLeft(this.bar)) / barWidth;\n                this.updateBar('played', percentage, 'width');\n                this.element.getElementsByClassName('aplayer-ptime')[0].innerHTML = this.secondToTime(percentage * this.audio.duration);\n                this.audio.currentTime = parseFloat(this.playedBar.style.width) / 100 * this.audio.duration;\n            });\n\n            this.thumb.addEventListener('mouseover', () => {\n                this.thumb.style.background = this.option.theme;\n            });\n            this.thumb.addEventListener('mouseout', () => {\n                this.thumb.style.background = '#fff';\n            });\n\n            const thumbMove = (event) => {\n                const e = event || window.event;\n                let percentage = (e.clientX - getElementViewLeft(this.bar)) / barWidth;\n                percentage = percentage > 0 ? percentage : 0;\n                percentage = percentage < 1 ? percentage : 1;\n                this.updateBar('played', percentage, 'width');\n                if (this.option.showlrc) {\n                    this.updateLrc(parseFloat(this.playedBar.style.width) / 100 * this.audio.duration);\n                }\n                this.element.getElementsByClassName('aplayer-ptime')[0].innerHTML = this.secondToTime(percentage * this.audio.duration);\n            };\n\n            const thumbUp = () => {\n                document.removeEventListener('mouseup', thumbUp);\n                document.removeEventListener('mousemove', thumbMove);\n                this.audio.currentTime = parseFloat(this.playedBar.style.width) / 100 * this.audio.duration;\n                this.playedTime = setInterval(() => {\n                    this.updateBar('played', this.audio.currentTime / this.audio.duration, 'width');\n                    if (this.option.showlrc) {\n                        this.updateLrc();\n                    }\n                    this.element.getElementsByClassName('aplayer-ptime')[0].innerHTML = this.secondToTime(this.audio.currentTime);\n                    this.trigger('playing');\n                }, 100);\n            };\n\n            this.thumb.addEventListener('mousedown', () => {\n                barWidth = this.bar.clientWidth;\n                clearInterval(this.playedTime);\n                document.addEventListener('mousemove', thumbMove);\n                document.addEventListener('mouseup', thumbUp);\n            });\n\n            // control volume\n            this.volumeBar = this.element.getElementsByClassName('aplayer-volume')[0];\n            const volumeBarWrap = this.element.getElementsByClassName('aplayer-volume-bar')[0];\n            const volumeicon = this.element.getElementsByClassName('aplayer-time')[0].getElementsByTagName('i')[0];\n            const barHeight = 35;\n            this.element.getElementsByClassName('aplayer-volume-bar-wrap')[0].addEventListener('click', (event) => {\n                const e = event || window.event;\n                let percentage = (barHeight - e.clientY + getElementViewTop(volumeBarWrap)) / barHeight;\n                percentage = percentage > 0 ? percentage : 0;\n                percentage = percentage < 1 ? percentage : 1;\n                this.updateBar('volume', percentage, 'height');\n                this.audio.volume = percentage;\n                if (this.audio.muted) {\n                    this.audio.muted = false;\n                }\n                if (percentage === 1) {\n                    volumeicon.className = 'demo-icon aplayer-icon-volume-up';\n                }\n                else {\n                    volumeicon.className = 'demo-icon aplayer-icon-volume-down';\n                }\n            });\n            volumeicon.addEventListener('click', () => {\n                if (this.audio.muted) {\n                    this.audio.muted = false;\n                    volumeicon.className = this.audio.volume === 1 ? 'demo-icon aplayer-icon-volume-up' : 'demo-icon aplayer-icon-volume-down';\n                    this.updateBar('volume', this.audio.volume, 'height');\n                }\n                else {\n                    this.audio.muted = true;\n                    volumeicon.className = 'demo-icon aplayer-icon-volume-off';\n                    this.updateBar('volume', 0, 'height');\n                }\n            });\n\n            // get element's view position\n            function getElementViewLeft(element) {\n                let actualLeft = element.offsetLeft;\n                let current = element.offsetParent;\n                let elementScrollLeft;\n                while (current !== null) {\n                    actualLeft += current.offsetLeft;\n                    current = current.offsetParent;\n                }\n                elementScrollLeft = document.body.scrollLeft + document.documentElement.scrollLeft;\n                return actualLeft - elementScrollLeft;\n            }\n\n            function getElementViewTop(element) {\n                let actualTop = element.offsetTop;\n                let current = element.offsetParent;\n                let elementScrollTop;\n                while (current !== null) {\n                    actualTop += current.offsetTop;\n                    current = current.offsetParent;\n                }\n                elementScrollTop = document.body.scrollTop + document.documentElement.scrollTop;\n                return actualTop - elementScrollTop;\n            }\n\n            // loop control\n            const loopEle = this.element.getElementsByClassName('aplayer-icon-loop')[0];\n            loopEle.addEventListener('click', () => {\n                if (this.loop) {\n                    loopEle.classList.add('aplayer-noloop');\n                    this.loop = false;\n                    this.audio.loop = this.multiple ? false : this.loop;\n                }\n                else {\n                    loopEle.classList.remove('aplayer-noloop');\n                    this.loop = true;\n                    this.audio.loop = this.multiple ? false : this.loop;\n                }\n            });\n\n            // toggle menu control\n            if (this.multiple) {\n                this.element.getElementsByClassName('aplayer-icon-menu')[0].addEventListener('click', () => {\n                    const list = this.element.getElementsByClassName('aplayer-list')[0];\n                    if (!list.classList.contains('aplayer-list-hide')) {\n                        list.classList.add('aplayer-list-hide');\n                    }\n                    else {\n                        list.classList.remove('aplayer-list-hide');\n                    }\n                });\n            }\n\n            this.setMusic(0);\n\n            instances.push(this);\n        }\n\n        /**\n         * Set music\n         */\n        setMusic(index) {\n            // get this.music\n            if (this.multiple && typeof(index) !== 'undefined') {\n                this.playIndex = index;\n            }\n            const indexMusic = this.playIndex;\n            this.music = this.multiple ? this.option.music[indexMusic] : this.option.music;\n\n            // set html\n            if (this.music.pic) {\n                this.element.getElementsByClassName('aplayer-pic')[0].style.backgroundImage = `url(${encodeURI(this.music.pic)})`;\n            }\n            this.element.getElementsByClassName('aplayer-title')[0].innerHTML = this.music.title;\n            this.element.getElementsByClassName('aplayer-author')[0].innerHTML = ` - ${this.music.author}`;\n            if (this.multiple) {\n                if (this.element.getElementsByClassName('aplayer-list-light')[0]) {\n                    this.element.getElementsByClassName('aplayer-list-light')[0].classList.remove('aplayer-list-light');\n                }\n                this.element.getElementsByClassName('aplayer-list')[0].getElementsByTagName('li')[indexMusic].classList.add('aplayer-list-light');\n            }\n\n            // set the previous audio object\n            if (this.audio) {\n                this.pause();\n                this.audio.currentTime = 0;\n            }\n\n            // get this audio object\n            if ((this.multiple && !this.audios[indexMusic]) || this.playIndex === -1) {\n                this.audio = document.createElement(\"audio\");\n                this.audio.src = this.music.url;\n                if (this.option.preload) {\n                    this.audio.preload = this.option.preload;\n                }\n                else {\n                    this.audio.preload = this.isMobile ? 'none' : 'metadata';\n                }\n\n                // show audio time: the metadata has loaded or changed\n                this.audio.addEventListener('durationchange', () => {\n                    if (this.audio.duration !== 1) {           // compatibility: Android browsers will output 1 at first\n                        this.element.getElementsByClassName('aplayer-dtime')[0].innerHTML = this.secondToTime(this.audio.duration);\n                    }\n                });\n\n                // show audio loaded bar: to inform interested parties of progress downloading the media\n                this.audio.addEventListener('progress', () => {\n                    const percentage = this.audio.buffered.length ? this.audio.buffered.end(this.audio.buffered.length - 1) / this.audio.duration : 0;\n                    this.updateBar('loaded', percentage, 'width');\n                });\n\n                // audio download error: an error occurs\n                this.audio.addEventListener('error', () => {\n                    this.element.getElementsByClassName('aplayer-author')[0].innerHTML = ` - Error happens ╥﹏╥`;\n                    this.trigger('pause');\n                });\n\n                // audio can play: enough data is available that the media can be played\n                this.audio.addEventListener('canplay', () => {\n                    this.trigger('canplay');\n                });\n\n                // multiple music play\n                this.ended = false;\n                if (this.multiple) {\n                    this.audio.addEventListener('ended', () => {\n                        if (this.isMobile) {\n                            this.ended = true;\n                            this.pause();\n                            return;\n                        }\n                        if (this.audio.currentTime !== 0) {\n                            if (this.playIndex < this.option.music.length - 1) {\n                                this.setMusic(++this.playIndex);\n                            }\n                            else if (this.loop) {\n                                this.setMusic(0);\n                            }\n                            else if (!this.loop) {\n                                this.ended = true;\n                                this.pause();\n                                this.trigger('ended');\n                            }\n                        }\n                    });\n                }\n                else {\n                    this.audio.addEventListener('ended', () => {\n                        if (!this.loop) {\n                            this.ended = true;\n                            this.pause();\n                            this.trigger('ended');\n                        }\n                    });\n                }\n\n                // control volume\n                this.audio.volume = parseInt(this.element.getElementsByClassName('aplayer-volume')[0].style.height) / 100;\n\n                // loop\n                this.audio.loop = this.multiple ? false : this.loop;\n\n                if (this.multiple) {\n                    this.audios[indexMusic] = this.audio;\n                }\n            }\n            else {\n                this.audio = this.audios[indexMusic];\n                this.audio.volume = parseInt(this.element.getElementsByClassName('aplayer-volume')[0].style.height) / 100;\n                this.audio.currentTime = 0;\n            }\n\n            // fill in lrc\n            if (this.option.showlrc) {\n                this.lrc = this.multiple ? this.lrcs[indexMusic] : this.lrcs[0];\n                let lrcHTML = '';\n                this.lrcContents = this.element.getElementsByClassName('aplayer-lrc-contents')[0];\n                for (let i = 0; i < this.lrc.length; i++) {\n                    lrcHTML += `<p>${this.lrc[i][1]}</p>`;\n                }\n                this.lrcContents.innerHTML = lrcHTML;\n                if (!this.lrcIndex) {\n                    this.lrcIndex = 0;\n                }\n                this.lrcContents.getElementsByTagName('p')[0].classList.add('aplayer-lrc-current');\n                this.lrcContents.style.transform = 'translateY(0px)';\n                this.lrcContents.style.webkitTransform = 'translateY(0px)';\n            }\n\n            // set duration time\n            if (this.audio.duration !== 1) {           // compatibility: Android browsers will output 1 at first\n                this.element.getElementsByClassName('aplayer-dtime')[0].innerHTML = this.audio.duration ? this.secondToTime(this.audio.duration) : '00:00';\n            }\n\n            // autoplay\n            if (this.option.autoplay && !this.isMobile) {\n                this.play();\n            }\n            this.option.autoplay = true;  // autoplay next music\n\n            if (this.isMobile) {\n                this.pause();\n            }\n        }\n\n        /**\n         * Play music\n         */\n        play() {\n            if (this.audio.paused) {\n                this.button.classList.remove('aplayer-play');\n                this.button.classList.add('aplayer-pause');\n                this.button.innerHTML = '';\n                setTimeout(() => {\n                    this.button.innerHTML = '<i class=\"demo-icon aplayer-icon-pause\"></i>';\n                }, 100);\n\n                // pause other players (Thanks @Aprikyblue)\n                if (this.option.mutex) {\n                    for (let i = 0; i < instances.length; i++) {\n                        if (this != instances[i]) {\n                            instances[i].pause();\n                        }\n                    }\n                }\n                this.audio.play();\n                if (this.playedTime) {\n                    clearInterval(this.playedTime);\n                }\n                this.playedTime = setInterval(() => {\n                    this.updateBar('played', this.audio.currentTime / this.audio.duration, 'width');\n                    if (this.option.showlrc) {\n                        this.updateLrc();\n                    }\n                    this.ptime.innerHTML = this.secondToTime(this.audio.currentTime);\n                    this.trigger('playing');\n                }, 100);\n                this.trigger('play');\n            }\n        }\n\n        /**\n         * Pause music\n         */\n        pause() {\n            if (!this.audio.paused || this.ended) {\n                this.ended = false;\n                this.button.classList.remove('aplayer-pause');\n                this.button.classList.add('aplayer-play');\n                this.button.innerHTML = '';\n                setTimeout(() => {\n                    this.button.innerHTML = '<i class=\"demo-icon aplayer-icon-play\"></i>';\n                }, 100);\n                this.audio.pause();\n                clearInterval(this.playedTime);\n                this.trigger('pause');\n            }\n        }\n\n        /**\n         * attach event\n         */\n        on(name, func) {\n            if (typeof func === 'function') {\n                this.event[name].push(func);\n            }\n        }\n    }\n\n    if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n        module.exports = APlayer;\n    }\n    else {\n        window.APlayer = APlayer;\n    }\n})([]);"],"sourceRoot":"/source/"}